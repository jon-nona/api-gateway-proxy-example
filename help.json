{
  "audit:critical": "audit the project for critical dependency issues",
  "build": "build the source to the dist directory",
  "build:prewatch": "clean the dist directory out before building",
  "build:package": "clean the dist directory out before building, build and package ready for deployment.",
  "build:watch": "build the source directory in watch mode",
  "build:install-prod-dependencies": "copy the package.json into the dist directory and only install production dependencies",
  "cdk": "execute aws cdk via npx",
  "cdk:synth": "synthesize cdk ready for deployment",
  "clean": "remove dist",
  "deploy:local": "deploy the local stack",
  "deploy:staging": "deploy the staging stack",
  "lint": "lint the project",
  "local": "clean, build start typescript compiler in watch mode and start sam local",
  "local:api": "synthesize a local cloudformation template for sam local and run it",
  "reset": "reset the whole project",
  "synth": "execute cdk synth via npx",
  "synth:local": "synthesize a cloudformation template for use with sam local with cdk",
  "test:stack": "run tests on the cdk stack definitions",
  "test:stack:watch": "run tests on the cdk stack definitions in watch mode",
  "test": "run unit tests ",
  "test:watch": "run unit tests in watch mode",
  "test:coverage": "run unit tests and generate coverage"
}
